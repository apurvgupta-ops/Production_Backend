name: Auto Merge, Build Docker, and Deploy

on:
  push:
    branches-ignore:
      - main

jobs:
  # 1Ô∏è‚É£ Auto merge any branch ‚Üí main
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Auto merge to main
        uses: devmasx/merge-branch@v1.4.0
        with:
          type: now
          from_branch: ${{ github.ref_name }}
          target_branch: main
          github_token: ${{ secrets.TOKEN }}

  # 2Ô∏è‚É£ Build and push Docker image when main updates
  build-and-push:
    runs-on: ubuntu-latest
    needs: auto-merge
    if: github.ref == 'refs/heads/main' || needs.auto-merge.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/steeru-api:latest
          file: ./Dockerfile

  # # 3Ô∏è‚É£ Deploy on remote server using docker-compose
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push

  #   steps:
  #     - name: Deploy via SSH
  #       uses: appleboy/ssh-action@v1.1.0
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.SSH_KEY }}
  #         script: |
  #           echo "üîÅ Pulling latest Docker image..."
  #           cd /var/www/steeru
  #           docker-compose pull
  #           docker-compose down
  #           docker-compose up -d --build

  #           echo "üßπ Cleaning old images..."
  #           docker image prune -af

  #     - name: ü©∫ Health Check
  #       run: |
  #         echo "ü©∫ Checking app health..."
  #         sleep 8
  #         curl -f http://${{ secrets.HOST }}:3000/health || (echo "‚ùå Health check failed" && exit 1)
